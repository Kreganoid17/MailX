@model Mail_X.Models.FormDetails
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor


    <link rel="stylesheet" href="/css/Theme.css">



<div class = "col-5 float-end">

        
        <h2 style = "margin-top:45px;">Software Release To Deployment</h2>

    </div>

    
    <div class = "d-flex align-items-start justify-content-start mt-2 col-2">

        @using (@Html.BeginForm("ReturnToHome","Send"))
        {
                                    
           <input type="image" src="~/img/MAIL_X_LOGO.png" class = "img-fluid" style = "width:170px; height:90px; margin-left:-15px">

        }

    </div>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@using (@Html.BeginForm("UpdateForm", "Form", new { Model, @ViewBag.ID}))
{

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new{@class = "text-danger"})

    <div class = " mt-5 col">

        <div>

            <label>Project ID:</label>
            @Html.TextBoxFor(Model => Model.ProjectID, new {@class = "w-25", @style = "margin-left:132px;", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.ProjectID, "", new {@class = "text-danger"})

        </div>

        <br>

        <div>

            <label>Project Name:</label>
            @Html.TextBoxFor(Model => Model.ProjectName, new {@class = "w-25", @style = "margin-left:105px;", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.ProjectName, "", new {@class = "text-danger"})

        </div>

        <br>

        <div>

            <label>Deploy Start Date:</label>
            @Html.TextBoxFor(Model => Model.StartDate, new {@class = "w-25", style = "margin-left:78px; height:30px;", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.StartDate, "", new {@class = "text-danger"})

        </div>

        <br>

        <div>

            <label>Deploy End Date:</label>
            @Html.TextBoxFor(Model => Model.EndDate, new {@class = "w-25", style = "margin-left:83px; height:30px;", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.EndDate, "", new {@class = "text-danger"})

        </div>

        <br>

        <div>

            <label>Application Name:</label>
            @Html.TextBoxFor(Model => Model.AppName, new {@class = "w-25", @style = "margin-left:78px;", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.AppName, "", new {@class = "text-danger"})

        </div>

        <div class = "pt-4">

            <label>Environment:</label>
            @Html.TextBoxFor(Model => Model.Environment, new {@class = "w-25", @style = "margin-left:110px;", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.Environment, "", new {@class = "text-danger"})

        </div>

        <br>

        <div>

            <label>DNS Name:</label>
            @Html.TextBoxFor(Model => Model.ServerName, new {@class = "w-25", @style = "margin-left:118px;", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.ServerName, "", new {@class = "text-danger"})

        </div>

        <br>

@if ((HttpContextAccessor.HttpContext.Session.GetString("DeptID") == "1003") && (HttpContextAccessor.HttpContext.Session.GetString("IsLeader") == "1"))
{
        
    <div class = "col-12">

        <div class = "row">
            
            <div class = "col">              
                                    
                    <input type="button" value = "Accept" class="btn btn-primary float-end mx-2" style = "background-color: rgba(0,128,0,0.7); border-color:green;" data-bs-toggle = "modal" data-bs-target="#CommentModal">

                                    
                     <input type="button" value = "Reject" class="btn btn-primary float-end" style = "background-color: rgba(255,0,0,0.7); border-color:red;" onclick="location.href='@Url.Action("Reject", "Form", new {@ViewBag.ID})'">

            </div>


        </div>


    </div>

        <div class = "modal fade" id="CommentModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
            <div class = "modal-dialog">
                <div class = "modal-content">
                    <div class = "modal-header">
                        <h5 class = "modal-title" id = "confirmModalLabel">Comments</h5>
                    </div>
                    <div class = "modal-body" id = "modal_body">
                        <textarea rows = "3" cols = "10" id = "Comment" style = "width: 465px;"></textarea>
                    </div>
                    <div class = "modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss = "modal">Cancel</button>
                        <button type="button" class="btn btn-primary"   data-bs-dismiss = "modal" onclick = "AddComment()">Accept</button>
                    </div>
                </div>
            </div>
       </div>
}

  <br>

        <div>

            <label>Pull Request:</label> 


        </div>

        <div>

           @Html.TextAreaFor(Model => Model.PullRequests, new{@class = "w-100", rows = "5", col = "80", @id = "Finput", @readonly = "true"})
           @Html.ValidationMessageFor(Model => Model.PullRequests, "", new {@class = "text-danger"})


        </div>

        <br>

        <div class = "pt-3">

            <label>Deployment Instructions:</label>
            

        </div>


    </div>

     <div class = "pt-1">

           @Html.TextAreaFor(Model => Model.AdditionalNotes, new{@class = "w-100", rows = "7", col = "80", @id = "Finput", @readonly = "true"})
           @Html.ValidationMessageFor(Model => Model.AdditionalNotes, "", new {@class = "text-danger"})

     </div>


     <br>

            <div>

                <label>Developer's Comments:</label>
                @Html.TextAreaFor(Model => Model.Comments, new{@class = "w-100", rows = "4", col = "50", @id = "Finput", @readonly = "true"})
                @Html.ValidationMessageFor(Model => Model.Comments, "", new {@class = "text-danger"})

            </div>

    <br>

        

        @if(Model.SignOffs.Count >= 0)
        {
            <br></br>
            <h2>Approvals</h2>
            <br>

            for (int i = 0; i < Model.SignOffs.Count; i++)
            {
 
    <div class = "card p-2" id = "Finput">

    <div class = "col">

        <div>

            <div class = "row">

            <div class = "col-4" >
                <label>Employee ID:</label>
                @Html.TextBoxFor(Model => Model.SignOffs[i].EmpID, new{@id="Finput", @class="w-100", @readonly = "true"})
            </div>

            <div class = "col-4">
                <label>Name:</label>
                @Html.TextBoxFor(Model => Model.SignOffs[i].SignName, new{@id="Finput", @class="w-100", @readonly = "true"})
            </div>

            <div class = "col-4">
                <label>Department Name:</label>
                @Html.TextBoxFor(Model => Model.SignOffs[i].DeptName, new{@id="Finput", @class="w-100", @readonly = "true"})
            </div>

            <div class = "col-4">
                <label>Date Approved:</label>
                @Html.TextBoxFor(Model => Model.SignOffs[i].SignDate, new{@id="Finput", @class="w-100", @readonly = "true"})
            </div>

            </div>

        </div>

    </div>

    <br>

    <div class = "pt-3">

            <label>Comments:</label>

     </div>

     <div class = "pt-1">

            @Html.TextAreaFor(Model => Model.SignOffs[i].Comments, new{@class = "w-100", rows = "5", col = "50", @id = "Finput", @readonly = "true"})
            @Html.ValidationMessageFor(Model => Model.Comments, "", new {@class = "text-danger"})

     </div>

     </div>

<br></br>

            }


        }

     }



<br>



@using (@Html.BeginForm("ReturnToHome","Send"))
        {
                                    
            <button class="btn btn-primary float-start" style = "background-color: #73a9ff; border-color:#73a9ff;">Back</button>

        }
  
@Html.ValidationSummary(true)

@if(ViewBag.Message != null){
                
                <script>

                    alert("@ViewBag.Message");

                </script>

            } 

<script>

    var comment;

function AddComment(){
        
            var input = document.getElementById("Comment").value;

            var ID = "@ViewBag.ID";

            comment = input.toString();

            window.location.href = '@Url.Action("Accept", "Form")?ID=' + parseInt(ID) + '&comment=' + comment;
        
        }

</script>

